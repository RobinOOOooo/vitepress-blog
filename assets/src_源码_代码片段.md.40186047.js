import{_ as a,o as s,c as t,X as e}from"./chunks/framework.39c1605d.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"src/源码/代码片段.md","filePath":"src/源码/代码片段.md","lastUpdated":1693914810000}'),n={name:"src/源码/代码片段.md"},l=e(`<h3 id="获取类加载器" tabindex="-1">获取类加载器 <a class="header-anchor" href="#获取类加载器" aria-label="Permalink to &quot;获取类加载器&quot;">​</a></h3><blockquote><p>ClassUtils.getDefaultClassLoader();</p></blockquote><h3 id="实例化" tabindex="-1">实例化 <a class="header-anchor" href="#实例化" aria-label="Permalink to &quot;实例化&quot;">​</a></h3><blockquote><p>(ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass);</p></blockquote><h3 id="实例化spring-factories中配置的类" tabindex="-1">实例化spring.factories中配置的类 <a class="header-anchor" href="#实例化spring-factories中配置的类" aria-label="Permalink to &quot;实例化spring.factories中配置的类&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">spring.factories文件作用：使得Spring框架更加灵活、易用和可扩展</span></span>
<span class="line"><span style="color:#A6ACCD;">SpringApplication类</span></span>
<span class="line"><span style="color:#A6ACCD;">	private &lt;T&gt; Collection&lt;T&gt; getSpringFactoriesInstances(Class&lt;T&gt; type, Class&lt;?&gt;[] parameterTypes, Object... args) {</span></span>
<span class="line"><span style="color:#A6ACCD;">		ClassLoader classLoader = getClassLoader();</span></span>
<span class="line"><span style="color:#A6ACCD;">		// Use names and ensure unique to protect against duplicates</span></span>
<span class="line"><span style="color:#A6ACCD;">		Set&lt;String&gt; names = new LinkedHashSet&lt;&gt;(SpringFactoriesLoader.loadFactoryNames(type, classLoader));</span></span>
<span class="line"><span style="color:#A6ACCD;">		List&lt;T&gt; instances = createSpringFactoriesInstances(type, parameterTypes, classLoader, args, names);</span></span>
<span class="line"><span style="color:#A6ACCD;">		AnnotationAwareOrderComparator.sort(instances);</span></span>
<span class="line"><span style="color:#A6ACCD;">		return instances;</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span></code></pre></div><h3 id="defaultlistablebeanfactory工厂" tabindex="-1">DefaultListableBeanFactory工厂 <a class="header-anchor" href="#defaultlistablebeanfactory工厂" aria-label="Permalink to &quot;DefaultListableBeanFactory工厂&quot;">​</a></h3>`,7),o=[l];function r(c,i,p,d,C,u){return s(),t("div",null,o)}const h=a(n,[["render",r]]);export{g as __pageData,h as default};
